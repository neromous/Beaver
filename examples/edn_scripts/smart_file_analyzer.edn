;; 智能文件分析器
;; 根据文件类型自动选择分析策略
;; 默认分析: README.md（可以在脚本中修改 TARGET_FILE）

[
  ;; 配置区域
  [:p "🧠 智能文件分析器启动"]
  [:p "🎯 目标文件: README.md"]
  
  ;; 步骤1: 获取文件基本信息
  [:p "📊 分析文件基本信息..."]
  [:file/info "README.md"]
  
  ;; 步骤2: 预处理 - 检查文件大小
  [:p "📏 检查文件大小..."]
  [":p" "文件字符数: " [:str/length [:file/read "README.md"]]]
  
  ;; 步骤3: 智能分析 - 根据文件类型优化分析策略
  [:p "🤖 开始智能分析..."]
  [:file/write "analysis_results/smart_analysis.md" 
   [:nexus/sync 
    {"provider" "openrouter" "model" "gemini-2.5-flash"}
    [":msg/v2m" [
      [":system" "你是一个智能文档分析助手。请根据文件的类型、内容特点，提供最适合的分析方案。"]
      [":user" [":p" 
        "请智能分析以下文件，根据文件特点选择最佳的分析方法："
        "\n\n## 智能分析指南："
        "\n📋 **Markdown文件(.md)**: 分析文档结构、内容质量、技术文档完整性"
        "\n💻 **代码文件(.py/.js/.java等)**: 分析代码质量、架构设计、最佳实践"
        "\n📊 **数据文件(.json/.csv/.xml)**: 分析数据结构、格式规范、数据质量"
        "\n⚙️ **配置文件(.yaml/.toml/.ini)**: 分析配置结构、安全性、最佳实践"
        "\n📄 **文本文件(.txt)**: 分析内容主题、文本质量、信息价值"
        "\n\n## 请提供:"
        "\n1. 🎯 文件类型识别和特征分析"
        "\n2. 📖 内容结构和组织评估"
        "\n3. 💡 针对该文件类型的专业建议"
        "\n4. 🔧 改进建议和最佳实践"
        "\n5. ⭐ 质量评分（1-10分）和理由"
        "\n\n## 文件内容:"]]
      [":user" [:file/read "README.md"]]
    ]]]]
  
  ;; 步骤4: 生成结构化摘要
  [:p "📝 生成结构化摘要..."]
  [:file/write "analysis_results/structured_summary.json"
   [:nexus/sync 
    {"provider" "openrouter" "model" "gemini-2.5-flash"}
    [":msg/v2m" [
      [":system" "你是一个数据结构化专家。请将分析结果转换为结构化的JSON格式。"]
      [":user" [":p"
        "请为以下文件内容生成结构化的JSON摘要，格式如下："
        "\n```json"
        "\n{"
        "\n  \"file_type\": \"文件类型\","
        "\n  \"file_size_chars\": \"字符数\","
        "\n  \"main_topic\": \"主要主题\","
        "\n  \"key_features\": [\"特性1\", \"特性2\", \"特性3\"],"
        "\n  \"technical_level\": \"技术复杂度(初级/中级/高级)\","
        "\n  \"quality_score\": \"质量评分(1-10)\","
        "\n  \"summary\": \"简要摘要(50字内)\","
        "\n  \"recommendations\": [\"建议1\", \"建议2\"]"
        "\n}"
        "\n```"
        "\n\n文件内容:"]]
      [":user" [:file/read "README.md"]]
    ]]]]
  
  ;; 步骤5: 生成关键词提取
  [:p "🏷️ 提取关键词和标签..."]
  [:file/write "analysis_results/keywords.txt"
   [:nexus/quick-chat 
    [":p"
     "请从以下文件内容中提取10个最重要的关键词和5个技术标签，用逗号分隔:"
     "\n\n关键词格式: keyword1, keyword2, keyword3..."
     "\n技术标签格式: #tag1, #tag2, #tag3..."
     "\n\n文件内容: " [:file/read "README.md"]]]]
  
  ;; 步骤6: 完成报告
  [:p "✅ 智能分析完成!"]
  [:p "📊 详细分析: analysis_results/smart_analysis.md"]
  [:p "📋 结构化摘要: analysis_results/structured_summary.json"] 
  [:p "🏷️ 关键词提取: analysis_results/keywords.txt"]
  [:p "💡 提示: 修改脚本开头的文件路径可分析其他文件"]
] 